Каскадность css - способность свойств смешиваться и перезатирать друг
друга на основании правил преоритетов.



<div>(display: block) - базовый блочный элемент
<span>(display: inline) - базовый строчный элемент
<button>(display: inline-block)
<table>(display: table) - все что в нем, то является элементами таблицы
	tr(display: table-row) - строка таблицы
	td(display: table-cell) - столбец таблицы

<li>(display: list-item)

БЛОЧНЫЕ И СТРОЧНЫЕ ТЕГИ ИСКАТЬ В СКРИНАХ

Блочный элемент - ширина по ширине родителя, высота по контенту, можно 
		  задать размеры. Можно вложить и строчные и блочные,
		  исключение параграф <p>, в нем только строки

Строчные элементы - идут друг за другом в строку, размеры по контенту,
                    размеры поменять обычным способом нельзя, только
		    через св-во line-height: 3.5 и vertical-align: top
		    ,можно задать padding побокам.В строки можно вкладывать,
		    только строчные элементы, исключение ссылка <a>
		    

inline-block - расположение как у строчных, можем задать размеры и
	       отступы, можно написать vertical-align. В строчно-блочные
	       вкладывать можно и строки, и блоки 





box-sizing - свойство используется для изменения алгоритмов расчетов 
	     размеров элементов.
	     
box-sizing: content-box - если указать отступы, размеры самого блока не 
			  изменятся, но добавятся отступы, которые дадут 
			  доп размер к блоку

box-sizing: border-box - указав паддинги прописаные размеры блока уменшатся,
			 выделенное место займут отступы
			 (см. скрин box-sizing)





комбинации селекторов - специальные конструкции с помощью которых мы можем 
			группировать селекторы или из простых селекторов
			делать более сложные составные селекторы, для
			того что бы более точно выбрать элемент для которого
			должны применяться стили.

можно сгруппировать селекторы - например h1, h2, h3{font-famili: arial} или
				button.active{background-color: red}


селекторы потомка 
	header a {color: red} - все теги a, которые находятся в header 
				красим в красный


	header ul a {color: green} - красим теги а, которые находятся в 
				     ul и при этом в header


дочерние селекторы - располагаются непосредственно внутри родителя, внуки 
		     не считаются.

	section > h2{color: yellow} - стили всем дочерним


стили к смежным селекторам 

	h2 + p {} - для элемента p, который идет сразу после h2
	
	li + li {margin-left: 20px} - стиль применитс к li, которая идет
				      после li

комбинаторы к братским селекторам - элементы на одном уровне вложенности
	
	h2 ~ p {color: blue} - все p которые идут после h2 и являются
			       братскими получат стиль
			
	



container - доп элемент, оболочка над контентом, которая позволяет ограничить
	    его ширину и сосредоточить его содержимое в центре экрана, не 
	    давая разлетаться элементам контента по разным сторонам экрана
чаще всего контейнеры 1140px и 1170px для лучшего восприятия.


Каждая секция должна быть в общем контейнере с шириной 1140px или 1140px
(см. скрины стили в контейнере)




calc - функция, дающая возможность указывть размеры с помощью простых 
       вычислений(+, -, *, /)

можно для блока взять ширину экрана минус 100px - {width: calc(vw-100px)}

можно использовать для угла поворота элемента transform: 
						{rotate(calc(100deg*5))}

Нюансы:
1. Для calc всегда должны быть указаны единицы измерения(+ и -);
2. При делении делитель должен быть без единиц измерения;
3. При умножении у одного из элементов не должно быть единицы измерения;
4. При сложении и вычетаниии всегда должен быть пробел;




отступы в верстве бывают внутренними и внешними:
1. margin - внешний
2. padding - внутренний

можно через дифис использовать стороны {margin-left: 5px};

можно записать все margin в краткой формы {margin: 50px 20px 100px 60px;}
	Отступы по часовой top -> right -> bottom -> left

можно записать отступы сверху снизу и справа слева двумя значениями
	{margin: 50px 100px}  

можно записать тремя значениями {margin: 50px 100px 70px} 
	сверху 50px, по бокам 100px, снизу 70px

с помощью margin можно выровнять элемент по центру по горизонтали
				 {margin: 0 auto}
auto делит страницу пополам и делает одинаковые отступы

в margin можно написать отрицательные значения - двинуть контент за края родителя
				(см. скрин отрицательные значения)

схлопывание(margin collapsing) - если у граничащих сторон заданы разные
				 отступы, то применяться будет больший отступ

заголовок отталкивается не от родителя, если нет отступа у родителя -
	ВСЕГДА ЗАДАВАТЬ ГРАНИЦЫ РОДИТЕЛЮ, ЕСЛИ ТРЕБУЮТСЯ ОТСТУПЫ У ДОЧЕРНЕГО


padding - задаются точно также как и margin, но нельзя задать отрицательные зн-я



